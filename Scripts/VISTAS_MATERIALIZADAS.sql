--ANÁLISIS DE USUARIOS EN GENERAL
CREATE MATERIALIZED VIEW MVW_ANALISIS_USUARIOS AS
  (
      SELECT *
      FROM(
        WITH
          TBL_CANT_REVISTAS AS
            (
              SELECT A.CODIGO_USUARIO,
                  COUNT(1) AS CANT_REVISTAS
              FROM TBL_REVISTAS A
              GROUP BY A.CODIGO_USUARIO
            ),
          TBL_CANT_NOTICIAS AS
            (
            SELECT CODIGO_USUARIO,
                  COUNT(1) AS CANT_NOTICIAS
            FROM TBL_NOTICIAS
            GROUP BY CODIGO_USUARIO
            ),
          TBL_CANT_FLIPS AS
            (
              SELECT CODIGO_USUARIO_FLIP,
                COUNT(1) AS CANT_FLIPS
              FROM TBL_FLIPS
              GROUP BY CODIGO_USUARIO_FLIP
            ),
          TBL_CANT_SEGUIDORES AS
            (
              SELECT CODIGO_USUARIO_SEGUIDO,
                  COUNT(1) AS CANT_SEGUIDORES
              FROM TBL_SEGUIDORES
              GROUP BY CODIGO_USUARIO_SEGUIDO
            )
          SELECT A.CODIGO_USUARIO,
                  INITCAP(A.NOMBRE_USUARIO) AS NOMBRE_USUARIO,
                  A.CORREO,
                  B.TIPO_USUARIO,
                  D.ESTADO,
                  C.NOMBRE_LUGAR AS LUGAR_RESIDENCIA,
                  A.FECHA_REGISTRO,
                  NVL(E.CANT_REVISTAS,0) AS CANT_REVISTAS,
                  NVL(F.CANT_NOTICIAS,0) AS CANT_NOTICIAS,
                  NVL(G.CANT_FLIPS,0) AS CANT_FLIPS,
                  NVL(H.CANT_SEGUIDORES,0) AS CANT_SEGUIDORES
          FROM TBL_USUARIOS A
          LEFT JOIN TBL_TIPOS_USUARIO B
            ON(A.CODIGO_TIPO_USUARIO=B.CODIGO_TIPO_USUARIO)
          LEFT JOIN TBL_LUGARES C
            ON(A.CODIGO_LUGAR_RESIDENCIA=C.CODIGO_LUGAR)
          LEFT JOIN TBL_ESTADO_USUARIO D
            ON(A.CODIGO_ESTADO_USUARIO=D.CODIGO_ESTADO)
          LEFT JOIN TBL_CANT_REVISTAS E
            ON(A.CODIGO_USUARIO=E.CODIGO_USUARIO)
          LEFT JOIN TBL_CANT_NOTICIAS F
            ON(A.CODIGO_USUARIO=F.CODIGO_USUARIO)
          LEFT JOIN TBL_CANT_FLIPS G
            ON(A.CODIGO_USUARIO=G.CODIGO_USUARIO_FLIP)
          LEFT JOIN TBL_CANT_SEGUIDORES H
            ON(A.CODIGO_USUARIO=H.CODIGO_USUARIO_SEGUIDO)
          WHERE A.CODIGO_TIPO_USUARIO <> 3
          ORDER BY NOMBRE_USUARIO
      )
  );

--ANÁLISIS DE ESTADOS DE LAS CUENTAS DE USUARIO
CREATE MATERIALIZED VIEW MVW_ESTADOS_DE_CUENTA_USUARIOS AS
  (
     SELECT A.ESTADO,
        COUNT(B.CODIGO_USUARIO)AS CANT_USUARIOS
    FROM TBL_ESTADO_USUARIO A
    LEFT JOIN TBL_USUARIOS B
      ON (A.CODIGO_ESTADO=B.CODIGO_ESTADO_USUARIO)
    GROUP BY A.ESTADO
  )

--ANÁLISIS DE CATEGORÍAS
CREATE MATERIALIZED VIEW MVW_ANALISIS_CATEGORIAS AS
  (
      SELECT *
      FROM(
            WITH
            TBL_CANT_LIKES AS
              (
                SELECT  B.CODIGO_CATEGORIA,
                        COUNT(1) AS CANT_LIKES
                FROM TBL_REACCIONES_X_NOTICIAS A
                LEFT JOIN TBL_NOTICIAS B
                ON(A.CODIGO_NOTICIA=B.CODIGO_NOTICIA)
                WHERE A.CODIGO_REACCION = 1
                GROUP BY B.CODIGO_CATEGORIA
              ),
            TBL_CANT_NOTICIAS AS
              (
                SELECT  B.CODIGO_CATEGORIA,
                        COUNT(A.CODIGO_NOTICIA) AS CANT_NOTICIAS
                FROM TBL_NOTICIAS A
                LEFT JOIN TBL_CATEGORIA B
                ON(A.CODIGO_CATEGORIA=B.CODIGO_CATEGORIA)
                GROUP BY B.CODIGO_CATEGORIA
              ),
            TBL_CANT_SEGUIDORES AS
              (
                SELECT A.CODIGO_CATEGORIA_INTERES,
                    COUNT(A.CODIGO_USUARIO) AS CANT_SEGUIDORES
                FROM TBL_INTERESES_X_USUARIO A
                GROUP BY A.CODIGO_CATEGORIA_INTERES
              )
            SELECT  A.CODIGO_CATEGORIA,
                    A.CATEGORIA,
                    NVL(C.CANT_NOTICIAS,0) AS CANT_NOTICIAS,
                    NVL(B.CANT_LIKES,0) AS CANT_LIKES,
                    NVL(D.CANT_SEGUIDORES,0) AS CANT_SEGUIDORES
            FROM TBL_CATEGORIA A
            LEFT JOIN TBL_CANT_LIKES B
            ON(A.CODIGO_CATEGORIA=B.CODIGO_CATEGORIA)
            LEFT JOIN TBL_CANT_NOTICIAS C
            ON(A.CODIGO_CATEGORIA=C.CODIGO_CATEGORIA)
            LEFT JOIN TBL_CANT_SEGUIDORES D
            ON(A.CODIGO_CATEGORIA=D.CODIGO_CATEGORIA_INTERES)
      )
  );


--ANÁLISIS DE REVISTAS
CREATE MATERIALIZED VIEW MVW_ANALISIS_REVISTAS AS
  (
    SELECT *
    FROM (
          WITH
          TBL_CANT_NOTICIAS AS
            (
              SELECT CODIGO_REVISTA,
                  COUNT(CODIGO_NOTICIA) AS CANT_NOTICIAS
              FROM TBL_NOTICIAS
              GROUP BY CODIGO_REVISTA
            ),
          TBL_CANT_SEGUIDORES AS
            (
              SELECT CODIGO_REVISTA,
                      COUNT (CODIGO_SEGUIDOR) AS CANT_SEGUIDORES
              FROM TBL_REVISTAS_SEGUIDAS
              GROUP BY CODIGO_REVISTA
            ),
          TBL_CANT_COLABORADORES AS
            (
              SELECT CODIGO_REVISTA,
                    COUNT(CODIGO_COLABORADOR) AS CANT_COLABORADORES
              FROM TBL_COLABORADORES
              GROUP BY CODIGO_REVISTA
            ),
          TBL_CANT_CAT_CONTENIDAS AS
            (
              SELECT CODIGO_REVISTA,
                      COUNT(DISTINCT CODIGO_CATEGORIA) AS CATEGORIAS_CONTENIDAS
              FROM TBL_NOTICIAS
              GROUP BY CODIGO_REVISTA
            )
          SELECT A.CODIGO_REVISTA,
                  A.NOMBRE_REVISTA,
                  NVL(B.CANT_NOTICIAS,0) AS CANT_NOTICIAS,
                  NVL(C.CANT_SEGUIDORES,0) AS CANT_SEGUIDORES,
                  NVL(D.CANT_COLABORADORES,0) AS CANT_COLABORADORES,
                  NVL(E.CATEGORIAS_CONTENIDAS,0) AS CATEGORIAS_CONTENIDAS
          FROM TBL_REVISTAS A
          LEFT JOIN TBL_CANT_NOTICIAS B
            ON(A.CODIGO_REVISTA=B.CODIGO_REVISTA)
          LEFT JOIN TBL_CANT_SEGUIDORES C
            ON(A.CODIGO_REVISTA=C.CODIGO_REVISTA)
          LEFT JOIN TBL_CANT_COLABORADORES D
            ON(A.CODIGO_REVISTA=D.CODIGO_REVISTA)
          LEFT JOIN TBL_CANT_CAT_CONTENIDAS E
            ON(A.CODIGO_REVISTA=E.CODIGO_REVISTA)
    )
  );






  --ACTUALIZAR VISTAs
BEGIN
  dbms_mview.refresh('MVW_ANALISIS_USUARIOS');
  dbms_mview.refresh('MVW_ESTADOS_DE_CUENTA_USUARIOS');
  dbms_mview.refresh('MVW_ANALISIS_CATEGORIAS');
  dbms_mview.refresh('MVW_ANALISIS_REVISTAS');
END;